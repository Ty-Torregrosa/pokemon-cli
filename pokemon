#!/usr/bin/env python3

import requests
import click
import json

@click.command()
@click.option('--lookup', default='', help='print information about pokemon')
@click.option('--generation', default='', help='modifies set of moves returned by lookup')
@click.option('--move-type', 'movetype',default='', help='lists top 10 moves of move type')
def pokemon(lookup, generation, movetype):
    if lookup != '' and movetype == '':
    # Main option: --lookup
        try:
            URL = "https://pokeapi.co/api/v2/pokemon/" + str(lookup)
            initial_request = requests.get(URL)
            r = initial_request.json()
            moves = []
            # Case 1: User entered ./pokemon --lookup name-or-number 
            if generation == '':
                for move in r['moves']:
                    moves.append(move['move']['name'])
                moves.sort()
                print(r['name'],  r['order'], moves)
            else:
            # Case 2: User entered ./pokemon --lookup name-or-number --generation gen-name
                for move in r['moves']:
                    for detail in move['version_group_details']:
                    # version group details is inexplicably a list, this for loop protects us in case they decide to add elements
                        if generation == detail['version_group']['name']:
                            moves.append(move['move']['name'])
                if len(moves) == 0:
                # If there are no moves for a pokemon in a generation, it didn't exist during that generation
                    print("No pokemon with name or number \"" + str(lookup) + "\" exists in generation " + generation)
                    return 1
                moves.sort()
                print(r['name'], r['order'], moves)
        except Exception:
            print('Request to ' + URL + ' failed, status code: ' + str(initial_request.status_code) + "\nNo pokemon with name or number \"" + str(lookup) + "\" exists")
            return 1    
    elif lookup == '' and movetype != '':
    # Main option: --move-type
        try: 
            URL = "https://pokeapi.co/api/v2/type/" + str(movetype)
            initial_request = requests.get(URL)
            r = initial_request.json()
            moves = []
            if generation == '':
            # Case 1: User entered ./pokemon --move-type type
                for move_id in range(10):
                    moves.append(r['moves'][move_id]['name'])
                moves.sort()
                print(moves)
            else:
            # Case 2: User entered User entered ./pokemon --movetype type --generation gen-name
                move_id = 1
                while len(moves) < 10:
                    URL2 = "https://pokeapi.co/api/v2/move/" + str(move_id)
                    r2 = requests.get(URL2).json()
                    move_generation = r2['generation']['name']
                    URL3 = "https://pokeapi.co/api/v2/generation/" + move_generation
                    r3 = requests.get(URL3).json()

                    URL4 = "https://pokeapi.co/api/v2/generation/" + generation
                    r4 = requests.get(URL4).json()
                    
                    if r3['version_groups'][0]['name'] == generation or r3['id'] <= r4['id']:
                        moves.append(r['moves'][move_id-1]['name'])
                    move_id+=1
                moves.sort()
                print(moves)
        except Exception:
            print('Request to ' + URL + ' failed, status code: ' + str(initial_request.status_code) + "\nNo move-type \"" + str(movetype) + "\" exists")
            return 1

if __name__ == "__main__":
    pokemon()
